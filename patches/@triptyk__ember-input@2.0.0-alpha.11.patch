diff --git a/declarations/components/tpk-datepicker/input.d.ts b/declarations/components/tpk-datepicker/input.d.ts
index a51c07b9559409322c6defdbfadb05ce118a2625..8dac6b3ad7f344af1f86093d8ef3a522043b7e07 100644
--- a/declarations/components/tpk-datepicker/input.d.ts
+++ b/declarations/components/tpk-datepicker/input.d.ts
@@ -14,7 +14,7 @@ export interface FlatpickerArgs {
     defaultHour?: number;
     defaultMinute?: number;
     disable?: Array<string> | ((date: Date) => boolean);
-    disabledDates?: Date[] | ((date: Date) => boolean);
+    disabledDates?: Date[] | {from: Date, to: Date}[] | ((date: Date) => boolean);
     disableMobile?: boolean;
     enable?: Array<string> | ((date: Date) => boolean);
     enableTime?: boolean;
diff --git a/dist/components/tpk-datepicker/input.js.map b/dist/components/tpk-datepicker/input.js.map
index 479a5340915ec7cae5cfb18d01ce7ba9bbe5f795..e76d7016212e464517340b909549c654d23df0b2 100644
--- a/dist/components/tpk-datepicker/input.js.map
+++ b/dist/components/tpk-datepicker/input.js.map
@@ -1 +1 @@
-{"version":3,"file":"input.js","sources":["../../../src/components/tpk-datepicker/input.gts"],"sourcesContent":["import { template } from \"@ember/template-compiler\";\nimport type { TOC } from '@ember/component/template-only';\nimport EmberFlatpickr from 'ember-flatpickr/components/ember-flatpickr';\nexport interface FlatpickerArgs {\n    altFormat?: string;\n    altInput?: boolean;\n    altInputClass?: string;\n    allowInput?: boolean;\n    allowInvalidPreload?: boolean;\n    appendTo?: HTMLElement | string;\n    ariaDateFormat?: string;\n    conjunction?: string;\n    clickOpens?: boolean;\n    dateFormat?: string | Array<string>;\n    defaultDate?: string | Date | null;\n    defaultHour?: number;\n    defaultMinute?: number;\n    disable?: Array<string> | ((date: Date) => boolean);\n    disabledDates?: Date[] | ((date: Date) => boolean);\n    disableMobile?: boolean;\n    enable?: Array<string> | ((date: Date) => boolean);\n    enableTime?: boolean;\n    enableSeconds?: boolean;\n    formatDate?: (date: Date, format: string, locale?: string) => string;\n    hourIncrement?: number;\n    inline?: boolean;\n    maxDate?: string | Date;\n    minDate?: string | Date;\n    locale?: string;\n    minuteIncrement?: number;\n    mode?: 'single' | 'multiple' | 'range';\n    nextArrow?: string;\n    noCalendar?: boolean;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    onClose?: Function;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    onOpen?: Function;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    onReady?: Function;\n    parseDate?: (date: string, format: string) => Date | void;\n    position?: 'auto' | 'top' | 'right' | 'bottom' | 'left';\n    positionElement?: HTMLElement;\n    prevArrow?: string;\n    shorthandCurrentMonth?: boolean;\n    showMonths?: number;\n    time_24hr?: boolean;\n    weekNumbers?: boolean;\n    wrap?: boolean;\n    monthSelectorType?: 'dropdown' | 'static';\n    static?: boolean;\n    placeholder?: string;\n    id?: string;\n}\nexport interface TpkDatepickerInputComponentSignature {\n    Args: {\n        guid: string;\n        classless?: boolean;\n        disabled?: boolean;\n        disabledDates?: Date[] | ((date: Date) => boolean);\n        value: Date[] | Date | string | string[];\n        onChange: (value: Date[], e: Event) => void;\n    } & FlatpickerArgs;\n    Element: HTMLInputElement;\n}\n// https://github.com/typed-ember/glint/issues/599 cast to any to prevent using glint directives\nconst EmberFlatpickr1 = EmberFlatpickr as any;\n// Lot of @glint-expect-error. I do not want to loose all the type safety.\n// waiting on ember-flatpickr to be updated to a type safe version.\nconst TpkDatepickerInputComponent: TOC<TpkDatepickerInputComponentSignature> = template(`\n  <EmberFlatpickr1\n    data-test-tpk-datepicker-content\n\n    @altFormat={{@altFormat}}\n\n    @altInput={{@altInput}}\n\n    @altInputClass={{@altInputClass}}\n\n    @allowInput={{@allowInput}}\n\n    @allowInvalidPreload={{@allowInvalidPreload}}\n\n    @appendTo={{@appendTo}}\n\n    @ariaDateFormat={{@ariaDateFormat}}\n\n    @conjunction={{@conjunction}}\n\n    @clickOpens={{@clickOpens}}\n    @date={{@value}}\n\n    @dateFormat={{@dateFormat}}\n\n    @defaultDate={{@defaultDate}}\n\n    @defaultHour={{@defaultHour}}\n\n    @defaultMinute={{@defaultMinute}}\n\n    @disable={{@disabledDates}}\n\n    @disableMobile={{@disableMobile}}\n\n    @enable={{@enable}}\n\n    @enableTime={{@enableTime}}\n\n    @enableSeconds={{@enableSeconds}}\n\n    @formatDate={{@formatDate}}\n\n    @hourIncrement={{@hourIncrement}}\n\n    @inline={{@inline}}\n\n    @maxDate={{@maxDate}}\n\n    @minDate={{@minDate}}\n\n    @locale={{@locale}}\n\n    @minuteIncrement={{@minuteIncrement}}\n\n    @mode={{@mode}}\n\n    @nextArrow={{@nextArrow}}\n\n    @noCalendar={{@noCalendar}}\n\n    @onChange={{@onChange}}\n\n    @onClose={{@onClose}}\n\n    @onOpen={{@onOpen}}\n\n    @onReady={{@onReady}}\n\n    @parseDate={{@parseDate}}\n\n    @position={{@position}}\n\n    @positionElement={{@positionElement}}\n\n    @prevArrow={{@prevArrow}}\n\n    @shorthandCurrentMonth={{@shorthandCurrentMonth}}\n    @showMonths={{@showMonths}}\n\n    @time_24hr={{@time_24hr}}\n\n    @weekNumbers={{@weekNumbers}}\n\n    @wrap={{@wrap}}\n\n    @monthSelectorType={{@monthSelectorType}}\n    @static={{true}}\n    placeholder={{@placeholder}}\n    id={{@guid}}\n    disabled={{@disabled}}\n    class={{unless @classless 'tpk-datepicker-input'}}\n\n    ...attributes\n  />\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\nexport default TpkDatepickerInputComponent;\n"],"names":["EmberFlatpickr1","EmberFlatpickr","TpkDatepickerInputComponent","setComponentTemplate","precompileTemplate","scope","strictMode","templateOnly"],"mappings":";;;;;AAgEA;AACA,MAAMA,eAAe,GAAGC,cAAqB,CAAA;AAC7C;AACA;AACA,MAAMC,2BAAsE,GAAAC,oBAAA,CAAGC,kBAAA,CA+F5E,w4CAAA,EAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;AAAAL,IAAAA,eAAAA;AAAA,GAAA,CAAA;EAAAM,UAAA,EAAA,IAAA;AAIH,CAAC,CAAC,EAAAC,YAAA,EAAA;;;;"}
\ No newline at end of file
+{"version":3,"file":"input.js","sources":["../../../src/components/tpk-datepicker/input.gts"],"sourcesContent":["import { template } from \"@ember/template-compiler\";\nimport type { TOC } from '@ember/component/template-only';\nimport EmberFlatpickr from 'ember-flatpickr/components/ember-flatpickr';\nexport interface FlatpickerArgs {\n    altFormat?: string;\n    altInput?: boolean;\n    altInputClass?: string;\n    allowInput?: boolean;\n    allowInvalidPreload?: boolean;\n    appendTo?: HTMLElement | string;\n    ariaDateFormat?: string;\n    conjunction?: string;\n    clickOpens?: boolean;\n    dateFormat?: string | Array<string>;\n    defaultDate?: string | Date | null;\n    defaultHour?: number;\n    defaultMinute?: number;\n    disable?: Array<string> | ((date: Date) => boolean);\n    disabledDates?: Date[] | ((date: Date) => boolean);\n    disableMobile?: boolean;\n    enable?: Array<string> | ((date: Date) => boolean);\n    enableTime?: boolean;\n    enableSeconds?: boolean;\n    formatDate?: (date: Date, format: string, locale?: string) => string;\n    hourIncrement?: number;\n    inline?: boolean;\n    maxDate?: string | Date;\n    minDate?: string | Date;\n    locale?: string;\n    minuteIncrement?: number;\n    mode?: 'single' | 'multiple' | 'range';\n    nextArrow?: string;\n    noCalendar?: boolean;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    onClose?: Function;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    onOpen?: Function;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    onReady?: Function;\n    parseDate?: (date: string, format: string) => Date | void;\n    position?: 'auto' | 'top' | 'right' | 'bottom' | 'left';\n    positionElement?: HTMLElement;\n    prevArrow?: string;\n    shorthandCurrentMonth?: boolean;\n    showMonths?: number;\n    time_24hr?: boolean;\n    weekNumbers?: boolean;\n    wrap?: boolean;\n    monthSelectorType?: 'dropdown' | 'static';\n    static?: boolean;\n    placeholder?: string;\n    id?: string;\n}\nexport interface TpkDatepickerInputComponentSignature {\n    Args: {\n        guid: string;\n        classless?: boolean;\n        disabled?: boolean;\n        disabledDates?: Date[] | {from: date, to: date}[] | ((date: Date) => boolean);\n        value: Date[] | Date | string | string[];\n        onChange: (value: Date[], e: Event) => void;\n    } & FlatpickerArgs;\n    Element: HTMLInputElement;\n}\n// https://github.com/typed-ember/glint/issues/599 cast to any to prevent using glint directives\nconst EmberFlatpickr1 = EmberFlatpickr as any;\n// Lot of @glint-expect-error. I do not want to loose all the type safety.\n// waiting on ember-flatpickr to be updated to a type safe version.\nconst TpkDatepickerInputComponent: TOC<TpkDatepickerInputComponentSignature> = template(`\n  <EmberFlatpickr1\n    data-test-tpk-datepicker-content\n\n    @altFormat={{@altFormat}}\n\n    @altInput={{@altInput}}\n\n    @altInputClass={{@altInputClass}}\n\n    @allowInput={{@allowInput}}\n\n    @allowInvalidPreload={{@allowInvalidPreload}}\n\n    @appendTo={{@appendTo}}\n\n    @ariaDateFormat={{@ariaDateFormat}}\n\n    @conjunction={{@conjunction}}\n\n    @clickOpens={{@clickOpens}}\n    @date={{@value}}\n\n    @dateFormat={{@dateFormat}}\n\n    @defaultDate={{@defaultDate}}\n\n    @defaultHour={{@defaultHour}}\n\n    @defaultMinute={{@defaultMinute}}\n\n    @disable={{@disabledDates}}\n\n    @disableMobile={{@disableMobile}}\n\n    @enable={{@enable}}\n\n    @enableTime={{@enableTime}}\n\n    @enableSeconds={{@enableSeconds}}\n\n    @formatDate={{@formatDate}}\n\n    @hourIncrement={{@hourIncrement}}\n\n    @inline={{@inline}}\n\n    @maxDate={{@maxDate}}\n\n    @minDate={{@minDate}}\n\n    @locale={{@locale}}\n\n    @minuteIncrement={{@minuteIncrement}}\n\n    @mode={{@mode}}\n\n    @nextArrow={{@nextArrow}}\n\n    @noCalendar={{@noCalendar}}\n\n    @onChange={{@onChange}}\n\n    @onClose={{@onClose}}\n\n    @onOpen={{@onOpen}}\n\n    @onReady={{@onReady}}\n\n    @parseDate={{@parseDate}}\n\n    @position={{@position}}\n\n    @positionElement={{@positionElement}}\n\n    @prevArrow={{@prevArrow}}\n\n    @shorthandCurrentMonth={{@shorthandCurrentMonth}}\n    @showMonths={{@showMonths}}\n\n    @time_24hr={{@time_24hr}}\n\n    @weekNumbers={{@weekNumbers}}\n\n    @wrap={{@wrap}}\n\n    @monthSelectorType={{@monthSelectorType}}\n    @static={{true}}\n    placeholder={{@placeholder}}\n    id={{@guid}}\n    disabled={{@disabled}}\n    class={{unless @classless 'tpk-datepicker-input'}}\n\n    ...attributes\n  />\n`, {\n    eval () {\n        return eval(arguments[0]);\n    }\n});\nexport default TpkDatepickerInputComponent;\n"],"names":["EmberFlatpickr1","EmberFlatpickr","TpkDatepickerInputComponent","setComponentTemplate","precompileTemplate","scope","strictMode","templateOnly"],"mappings":";;;;;AAgEA;AACA,MAAMA,eAAe,GAAGC,cAAqB,CAAA;AAC7C;AACA;AACA,MAAMC,2BAAsE,GAAAC,oBAAA,CAAGC,kBAAA,CA+F5E,w4CAAA,EAAA;AAAAC,EAAAA,KAAA,EAAAA,OAAA;AAAAL,IAAAA,eAAAA;AAAA,GAAA,CAAA;EAAAM,UAAA,EAAA,IAAA;AAIH,CAAC,CAAC,EAAAC,YAAA,EAAA;;;;"}
